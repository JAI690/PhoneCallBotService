AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Resources:
  CallBotServiceBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: callbot-service-bucket
  CallsQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: calls-queue
  CallDetailsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: CallDetails
      AttributeDefinitions:
      - AttributeName: CallID
        AttributeType: S
      KeySchema:
      - AttributeName: CallID
        KeyType: HASH
      BillingMode: PAY_PER_REQUEST
  ProcessCSVFunction:
    Type: AWS::Serverless::Function
    Properties:
      PackageType: Image
      ImageUri:
        Fn::Sub: ${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/phone-call-bot-service/process-csv:latest
      Events:
        S3Upload:
          Type: S3
          Properties:
            Bucket:
              Ref: CallBotServiceBucket
            Events: s3:ObjectCreated:*
  ProcessCallFunction:
    Type: AWS::Serverless::Function
    Properties:
      PackageType: Image
      ImageUri:
        Fn::Sub: ${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/phone-call-bot-service/process-call:latest
      Events:
        QueueTrigger:
          Type: SQS
          Properties:
            Queue:
              Fn::GetAtt:
              - CallsQueue
              - Arn
  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
          Action:
          - sts:AssumeRole
      Policies:
      - PolicyName: LambdaS3SQSPolicy
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - s3:GetObject
            - s3:PutObject
            - s3:ListBucket
            Resource:
              Fn::Sub: arn:aws:s3:::${CallBotServiceBucket}/*
          - Effect: Allow
            Action:
            - sqs:SendMessage
            - sqs:ReceiveMessage
            - sqs:DeleteMessage
            - sqs:GetQueueAttributes
            Resource:
              Fn::GetAtt:
              - CallsQueue
              - Arn
          - Effect: Allow
            Action:
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:GetItem
            Resource:
              Fn::GetAtt:
              - CallDetailsTable
              - Arn
  ECRRepositoryCSV:
    Type: AWS::ECR::Repository
    Properties:
      RepositoryName: process-csv
  ECRRepositoryCall:
    Type: AWS::ECR::Repository
    Properties:
      RepositoryName: process-call
  CICDPipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      RoleArn:
        Fn::GetAtt:
        - CodePipelineRole
        - Arn
      ArtifactStore:
        Type: S3
        Location: artifacts-phonecallbotservice
      Stages:
      - Name: Source
        Actions:
        - Name: SourceAction
          ActionTypeId:
            Category: Source
            Owner: ThirdParty
            Provider: GitHub
            Version: '1'
          Configuration:
            Owner: JAI690
            Repo: PHONECALLBOTSERVICE
            Branch: main
            OAuthToken:
              Fn::Sub: '{{resolve:secretsmanager:GitHubToken}}'
          OutputArtifacts:
          - Name: SourceOutput
      - Name: Build
        Actions:
        - Name: BuildAction
          ActionTypeId:
            Category: Build
            Owner: AWS
            Provider: CodeBuild
            Version: '1'
          Configuration:
            ProjectName: LambdaDockerBuild
          InputArtifacts:
          - Name: SourceOutput
          OutputArtifacts:
          - Name: BuildOutput
      - Name: Deploy
        Actions:
        - Name: DeployAction
          ActionTypeId:
            Category: Deploy
            Owner: AWS
            Provider: CloudFormation
            Version: '1'
          Configuration:
            ActionMode: CREATE_UPDATE
            StackName: CallBotServiceStack
            Capabilities: CAPABILITY_NAMED_IAM
            TemplatePath: BuildOutput::template.yaml
          InputArtifacts:
          - Name: BuildOutput
  LambdaDockerBuild:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: LambdaDockerBuild
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:5.0
        PrivilegedMode: true
      Source:
        Type: CODEPIPELINE
      Artifacts:
        Type: CODEPIPELINE
      ServiceRole:
        Fn::GetAtt:
        - CodeBuildRole
        - Arn
  CodePipelineRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - codepipeline.amazonaws.com
          Action:
          - sts:AssumeRole
      Policies:
      - PolicyName: CodePipelinePolicy
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - codebuild:StartBuild
            - codebuild:BatchGetBuilds
            - s3:GetObject
            - s3:GetObjectVersion
            - s3:PutObject
            - cloudformation:*
            - ecr:GetAuthorizationToken
            - ecr:BatchCheckLayerAvailability
            - ecr:BatchGetImage
            - ecr:GetDownloadUrlForLayer
            Resource: '*'
  CodeBuildRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - codebuild.amazonaws.com
          Action:
          - sts:AssumeRole
      Policies:
      - PolicyName: CodeBuildPolicy
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - ecr:GetAuthorizationToken
            - ecr:BatchCheckLayerAvailability
            - ecr:BatchGetImage
            - ecr:PutImage
            - s3:GetObject
            - s3:GetObjectVersion
            - s3:PutObject
            Resource: '*'
